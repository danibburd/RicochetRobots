import numpy as np

class board:
    size = 16

    #goals should be an array of 2, containing x and y
    def __init__(self, goals):
        self.goals = goals
        self.verticalWalls = np.array([[0 for _ in range(15)] for _ in range(15)])
        self.horizontalWalls = np.array([[0 for _ in range(15)] for _ in range(15)])
    
    #Get a Row from game board
    def getRow(self, row):
        return self.verticalWalls[row]

    #Get a column from game board
    def getCol(self, col):
        return [row[col] for row in self.horizontalWalls]
    
    #creates a board (currently one board)
    #TODO: generate boards from 4 tiles
    def generateBoard(self):
        self.verticalWalls = np.array([[0,0,0,1,0,0,0,0,1,0,0,0,0,0,0],
                                       [0,0,0,0,0,1,0,0,0,0,0,0,1,0,0],
                                       [1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
                                       [0,0,1,0,0,0,0,0,0,0,0,0,0,1,0],
                                       [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0],
                                       [0,0,0,0,0,0,1,1,1,0,0,0,0,0,0],
                                       [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],
                                       [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],
                                       [0,1,0,0,0,0,0,0,0,0,0,0,0,0,1],
                                       [0,0,0,0,0,1,0,0,0,0,0,1,0,0,0]])
        self.horizontalWalls = np.array([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0],
                                       [0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
                                       [1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1],
                                       [0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],
                                       [0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],
                                       [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0],
                                       [0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0],
                                       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                                       [0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0],
                                       [0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
                                       [0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],
                                       [1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0],
                                       [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]])
        return
    
    

    
        












